{
    "id": "357",
    "title": "Arterial Blood Gas (ABG) Analyzer",
    "desc": "The Arterial Blood Gas (ABG) Analyzer interprets ABG findings and values.",
    "data": {
        "orgreference": [
            {
                "href": "https://thorax.bmj.com/content/63/3/289.extract",
                "text": "Baillie JK. Simple, easily memorised 'rules of thumb' for the rapid assessment of physiological compensation for respiratory acid-base disorders. Thorax 2008;63:289-290 doi:10.1136/thx.2007.091223"
            }
        ],
        "other_refer": [],
        "evidence": "<p>This tool, developed by <a href=\"https://profiles.stanford.edu/jonc101\" target=\"_blank\" rel=\"noopener\">Jonathan Chen, MD</a> first determines the primary process by looking at the pH and the PCO2. It then calculates compensations to determine chronicity, compensatory, and co-existing acid-base disturbances.</p>",
        "facts": "<h3>Metabolic Acidosis (Anion Gap)</h3>\n<p>MUDPILES</p>\n<ul>\n<li>Methanol</li>\n<li>Uremia</li>\n<li>Diabetic Ketoacidosis (check serum ketones)</li>\n<li>Propylene Glycol (in BZD drips) or Paraldehydes</li>\n<li>Isoniazid</li>\n<li>Lactic Acidosis (check serum lactate)</li>\n<li>Ethylene Glycol (anti-freeze)</li>\n<li>Salycylates</li>\n</ul>\n<p>GOLDMARK</p>\n<ul>\n<li>Glycols (ethylene or propylene)</li>\n<li>Oxoporin (reflects fatty liver damage from glutathione consumption, e.g. acetaminophen toxicity)</li>\n<li>L-Lactate</li>\n<li>D-Lactate (bacterial form)</li>\n<li>Methanol</li>\n<li>Aspirin (salycylate)</li>\n<li>Renal Failure (BUN uremia)</li>\n<li>Ketoacidosis</li>\n</ul>\n<h3>Metabolic Acidosis (Non-Anion Gap)</h3>\n<p>GI Loss</p>\n<ul>\n<li>Diarrhea / Laxatives</li>\n<li>Fistula, (pancreatic, biliary)</li>\n<li>Uretero-intestinal diversion (ileal conduit)</li>\n</ul>\n<p>Renal Loss</p>\n<ul>\n<li>Renal Tubular Acidosis (Type 1 Distal or Type 2 Proximal)</li>\n<li>Renal Failure</li>\n<li>Hyper-kalemia</li>\n</ul>\n<p>Exogenous Acid</p>\n<ul>\n<li>HCl</li>\n<li>Amino Acids</li>\n</ul>\n<p>FUSED CARS</p>\n<ul>\n<li>Fistula (pancreatic, biliary)</li>\n<li>Uretero-gastric conduit</li>\n<li>Saline admin (dilutional acidosis)</li>\n<li>Endocrine (hyper-PTH)</li>\n<li>Diarrhea</li>\n<li>Carbonic anhydrase inhibitor (acetazolamide)</li>\n<li>Ammonium chloride</li>\n<li>Renal tubular acidosis</li>\n<li>Spironolactone</li>\n</ul>\n<h3>Metabolic Alkalosis</h3>\n<p>Alkaline Input</p>\n<ul>\n<li>Bicarbonate Infusion</li>\n<li>Hemodialysis</li>\n<li>Calcium Carbonate</li>\n<li>Parenteral Nutrition</li>\n</ul>\n<p>Proton Loss</p>\n<ul>\n<li>GI Loss (vomiting, NG suction)</li>\n<li>Renal loss</li>\n<li>Diuretics</li>\n<li>Mineralocorticoids</li>\n</ul>\n<h3>Respiratory Acidosis</h3>\n<p>Airway Obstruction</p>\n<ul>\n<li>Foreign body, aspiration</li>\n<li>OSA (obstructive sleep apnea)</li>\n<li>Laryngo- or broncho-spasm</li>\n</ul>\n<p>Neuromuscular</p>\n<ul>\n<li>Myasthenia gravis</li>\n<li>Hypokalemic periodic paralysis</li>\n<li>Guillain-Barre</li>\n<li>Botulism, Tetanus</li>\n<li>Hypo-kalemia, hypo-phosphatemia</li>\n<li>Cervical spine injury</li>\n<li>Morbid obesity</li>\n<li>Polio, MS, ALS</li>\n</ul>\n<p>Central</p>\n<ul>\n<li>Drugs (opiates, sedatives)</li>\n<li>Oxygen treatment in acute hypercapnia</li>\n<li>Brain trauma or stroke</li>\n</ul>\n<p>Pulmonary</p>\n<ul>\n<li>Pulmonary edema</li>\n<li>Asthma</li>\n<li>Pneumonia</li>\n<li>ARDS</li>\n<li>COPD</li>\n<li>Pulmonary Fibrosis</li>\n</ul>\n<p>Mechanical Ventilation</p>\n<h3>Respiratory Alkalosis</h3>\n<p>Hypoxia</p>\n<ul>\n<li>High altitude</li>\n<li>CHF</li>\n<li>Pulmonary Embolism</li>\n</ul>\n<p>Lung Disease</p>\n<ul>\n<li>Pulmonary fibrosis</li>\n<li>Pulmonary edema</li>\n<li>Pneumonia</li>\n</ul>\n<p>Drugs</p>\n<ul>\n<li>Progesterone</li>\n<li>Nicotine</li>\n</ul>\n<p>Stimulation of Respiratory Drive</p>\n<ul>\n<li>Psychogenic</li>\n<li>Neurologic (pontine tumor)</li>\n<li>Sepsis</li>\n<li>Pregnancy</li>\n<li>Mechanical ventilation</li>\n</ul>",
        "estimation": [
            {
                "name": "Albumin",
                "unit": "alb",
                "error_min": "0",
                "error_max": "7",
                "warn_min": "1",
                "warn_max": "6",
                "conversion": "10",
                "normal_max_si": "55",
                "normal_max_us": "5.5",
                "normal_min_si": "35",
                "normal_min_us": "3.5",
                "units_si": "g/L",
                "units_us": "g/dL"
            },
            {
                "name": "Bicarbonate",
                "unit": "bicarb",
                "error_min": "1",
                "error_max": "100",
                "warn_min": "4",
                "warn_max": "60",
                "conversion": "1",
                "normal_max_si": "28",
                "normal_max_us": "28",
                "normal_min_si": "23",
                "normal_min_us": "23",
                "units_si": "mmol/L",
                "units_us": "mEq/L"
            },
            {
                "name": "Chloride",
                "unit": "cl",
                "error_min": "70",
                "error_max": "130",
                "warn_min": "80",
                "warn_max": "120",
                "conversion": "1",
                "normal_max_si": "106",
                "normal_max_us": "106",
                "normal_min_si": "98",
                "normal_min_us": "98",
                "units_si": "mmol/L",
                "units_us": "mEq/L"
            },
            {
                "name": "Partial Pressure of CO2",
                "unit": "paco2",
                "error_min": "1",
                "error_max": "150",
                "warn_min": "10",
                "warn_max": "60",
                "conversion": "0.133",
                "normal_max_si": "5.586",
                "normal_max_us": "42",
                "normal_min_si": "5.054",
                "normal_min_us": "38",
                "units_si": "kPa",
                "units_us": "mm Hg"
            },
            {
                "name": "Sodium",
                "unit": "na",
                "error_min": "100",
                "error_max": "200",
                "warn_min": "0",
                "warn_max": "170",
                "conversion": "1",
                "normal_max_si": "145",
                "normal_max_us": "145",
                "normal_min_si": "136",
                "normal_min_us": "136",
                "units_si": "mmol/L",
                "units_us": "mEq/L"
            },
            {
                "name": "pH",
                "unit": "ph",
                "error_min": "6.2",
                "error_max": "8.5",
                "warn_min": "7",
                "warn_max": "7.6",
                "conversion": "1",
                "normal_max_si": "7.44",
                "normal_max_us": "7.44",
                "normal_min_si": "7.38",
                "normal_min_us": "7.38",
                "units_si": "",
                "units_us": ""
            }
        ],
        "primary_complains": [
            "Diarrhea",
            "Intoxication/Overdose",
            "Shortness of Breath"
        ],
        "disease_treated": [
            "Acid-Base Disturbance",
            "Anxiety",
            "Asthma",
            "Burns",
            "COPD",
            "Drug/Alcohol Use",
            "Ingestion/Overdose",
            "Pulmonary Embolism",
            "Renal Failure",
            "Trauma"
        ],
        "logic": "var calc_output = [];\nvar PH_NORMAL = 7.4;\nvar PH_NORMAL_DELTA = 0.01;\nvar PCO2_NORMAL = 40;\nvar PCO2_NORMAL_DELTA = 2;\nvar HCO3_NORMAL = 24;\nvar HCO3_NORMAL_DELTA = 2;\nvar ANION_GAP_NORMAL = 12;\nvar ANION_GAP_NORMAL_DELTA = 2;\nvar DELTA_DELTA_GAP_NORMAL_DELTA = 6;\nvar ALBUMIN_NORMAL = 4.0;\nvar ANION_GAP_ALBUMIN_CORRECTION = 2.5;\nvar EXPECTED_DELTA_PH_PER_PCO2_ACUTE = -0.008;\nvar EXPECTED_DELTA_PH_PER_PCO2_CHRONIC = -0.004;\nvar EXPECTED_DELTA_HCO3_PER_PCO2_ACIDOSIS_ACUTE = 0.1;\nvar EXPECTED_DELTA_HCO3_PER_PCO2_ACIDOSIS_CHRONIC = 0.4;\nvar EXPECTED_DELTA_HCO3_PER_PCO2_ALKALOSIS_ACUTE = 0.2;\nvar EXPECTED_DELTA_HCO3_PER_PCO2_ALKALOSIS_CHRONIC = 0.4;\nvar EXPECTED_PCO2_HCO3_COMPENSATION_DIFF = 15;\nvar summary = '';\nvar msg = '';\nvar gap = '';\nvar logic = '';\nvar pH = parseFloat(ph);\nvar na = parseFloat(sodium);\nvar cl = parseFloat(chloride);\nvar hco3 = parseFloat(hco3);\n\n\n\nif (UOMSYSTEM == true) {\n  var albumin = parseFloat(albumin);\n  var pCO2 = parseFloat(paco2); // stay in US units, you're good\n}\n\n\n\nif (UOMSYSTEM == false) {\n  var albumin = parseFloat(albumin) / 10;\n  var pCO2 = parseFloat(paco2) / 0.133; // to SI units\n}\n\n\nif (pH < PH_NORMAL) {\n  if (pCO2 > PCO2_NORMAL) {\n    analyzeRespiratoryAcidosis(pH, pCO2, na, cl, hco3, albumin);\n  } else {\n    analyzeMetabolicAcidosis(pH, pCO2, na, cl, hco3, albumin);\n  }\n} else {\n  if (pCO2 < PCO2_NORMAL) {\n    analyzeRespiratoryAlkalosis(pH, pCO2, na, cl, hco3, albumin);\n  } else {\n    analyzeMetabolicAlkalosis(pH, pCO2, na, cl, hco3, albumin);\n  }\n}\n\nfunction analyzeRespiratoryAcidosis(pH, pCO2, na, cl, hco3, albumin) {\n  var pHexpected = PH_NORMAL;\n  var expectedHCO3 = HCO3_NORMAL;\n  if (parseFloat(chronicity) == 1) {\n    summary += 'Primary Respiratory Acidosis, Acute, with: ';\n    msg = 'Primary Respiratory Acidosis, Acute';\n    pHexpected += (pCO2 - PCO2_NORMAL) * EXPECTED_DELTA_PH_PER_PCO2_ACUTE;\n    expectedHCO3 += (pCO2 - PCO2_NORMAL) *\n      EXPECTED_DELTA_HCO3_PER_PCO2_ACIDOSIS_ACUTE;\n  } else {\n    summary += 'Primary Respiratory Acidosis, Chronic, with: ';\n    msg = 'Primary Respiratory Acidosis, Chronic';\n    pHexpected += (pCO2 - PCO2_NORMAL) * EXPECTED_DELTA_PH_PER_PCO2_CHRONIC;\n    expectedHCO3 += (pCO2 - PCO2_NORMAL) *\n      EXPECTED_DELTA_HCO3_PER_PCO2_ACIDOSIS_CHRONIC;\n  }\n  if (Math.abs(pHexpected - pH) <= PH_NORMAL_DELTA) {\n    summary += 'Appropriately Compensated by Metabolic Alkalosis';\n  } else if (pH < pHexpected) {\n    summary += 'Secondary Metabolic Acidosis';\n    analyzeAnionGapAcidosis(pH, pCO2, na, cl, hco3, albumin);\n  } else {\n    summary += 'Secondary Metabolic Alkalosis';\n  }\n  calc_output.push({\n    name: 'mini',\n    value: ' ',\n    value_text: ' ',\n    message: msg\n  });\n  calc_output.push({\n    name: '1741_ABG Analysis_results',\n    value: ' ',\n    value_text: ' ',\n    message: summary\n  });\n}\n\nfunction analyzeRespiratoryAlkalosis(pH, pCO2, na, cl, hco3, albumin) {\n  var pHexpected = PH_NORMAL;\n  var expectedHCO3 = HCO3_NORMAL;\n  if (parseFloat(chronicity) == 1) {\n    summary += 'Primary Respiratory Alkalosis, Acute, with: ';\n    msg = 'Primary Respiratory Alkalosis, Acute';\n    pHexpected += (pCO2 - PCO2_NORMAL) * EXPECTED_DELTA_PH_PER_PCO2_ACUTE;\n    expectedHCO3 += (pCO2 - PCO2_NORMAL) *\n      EXPECTED_DELTA_HCO3_PER_PCO2_ALKALOSIS_ACUTE;\n  } else {\n    summary += 'Primary Respiratory Alkalosis, Chronic, with: ';\n    msg = 'Primary Respiratory Alkalosis, Chronic';\n    pHexpected += (pCO2 - PCO2_NORMAL) * EXPECTED_DELTA_PH_PER_PCO2_CHRONIC;\n    expectedHCO3 += (pCO2 - PCO2_NORMAL) *\n      EXPECTED_DELTA_HCO3_PER_PCO2_ALKALOSIS_CHRONIC;\n  }\n  if (Math.abs(pHexpected - pH) <= PH_NORMAL_DELTA) {\n    summary += 'Appropriately Compensated by Metabolic Acidosis';\n  } else if (pH < pHexpected) {\n    summary += 'Secondary Metabolic Acidosis';\n    analyzeAnionGapAcidosis(pH, pCO2, na, cl, hco3, albumin);\n  } else {\n    summary += 'Secondary Metabolic Alkalosis';\n  }\n  calc_output.push({\n    name: 'mini',\n    value: ' ',\n    value_text: ' ',\n    message: msg\n  });\n  calc_output.push({\n    name: '1741_ABG Analysis_result',\n    value: ' ',\n    value_text: ' ',\n    message: summary\n  });\n}\n\nfunction analyzeMetabolicAcidosis(pH, pCO2, na, cl, hco3, albumin) {\n  summary += 'Primary Metabolic Acidosis, with: ';\n  msg = 'Primary Metabolic Acidosis';\n  var pCO2expected = hco3 + EXPECTED_PCO2_HCO3_COMPENSATION_DIFF;\n  if (Math.abs(pCO2expected - pCO2) <= PCO2_NORMAL_DELTA) {\n    summary += 'Appropriately Compensated by Respiratory Alkalosis';\n  } else if (pCO2 < pCO2expected) {\n    summary += 'Secondary Respiratory Alkalosis';\n  } else {\n    summary += 'Secondary Respiratory Acidosis';\n  }\n  analyzeAnionGapAcidosis(pH, pCO2, na, cl, hco3, albumin);\n}\n\nfunction analyzeMetabolicAlkalosis(pH, pCO2, na, cl, hco3, albumin) {\n  summary += 'Primary Metabolic Alkalosis, with: ';\n  msg = 'Primary Metabolic Alkalosis';\n  var pCO2expected = hco3 + EXPECTED_PCO2_HCO3_COMPENSATION_DIFF;\n  if (Math.abs(pCO2expected - pCO2) <= PCO2_NORMAL_DELTA) {\n    summary += 'Appropriately Compensated by Respiratory Acidosis';\n  } else if (pCO2 < pCO2expected) {\n    summary += 'Secondary Respiratory Alkalosis';\n  } else {\n    summary += 'Secondary Respiratory Acidosis';\n  }\n  calc_output.push({\n    name: 'mini',\n    value: ' ',\n    value_text: ' ',\n    message: msg\n  });\n  calc_output.push({\n    name: '1741_ABG Analysis_result',\n    value: ' ',\n    value_text: ' ',\n    message: summary\n  });\n}\n\nfunction analyzeAnionGapAcidosis(pH, pCO2, na, cl, hco3, albumin) {\n  var anionGap = na - cl - hco3;\n  if (albumin < ALBUMIN_NORMAL) {\n    anionGap = anionGap + ANION_GAP_ALBUMIN_CORRECTION * (ALBUMIN_NORMAL -\n      albumin);\n  }\n  if (Math.abs(anionGap - ANION_GAP_NORMAL) <= ANION_GAP_NORMAL_DELTA) {\n    gap += 'This is a Non-Gap Metabolic Acidosis.';\n    msg = 'This is a Non-Gap Metabolic Acidosis.';\n  } else if (anionGap > ANION_GAP_NORMAL) {\n    gap += 'This is an Anion Gap Metabolic Acidosis.';\n    msg = 'This is an Anion Gap Metabolic Acidosis.';\n    analyzeDeltaDeltaGap(pH, pCO2, na, cl, hco3, albumin, anionGap);\n  }\n  calc_output.push({\n    name: 'mini',\n    value: ' ',\n    value_text: ' ',\n    message: msg\n  });\n  calc_output.push({\n    name: '1741_ABG Analysis_result',\n    value: ' ',\n    value_text: ' ',\n    message: gap + '<br/>' + summary\n  });\n}\n\nfunction analyzeDeltaDeltaGap(pH, pCO2, na, cl, hco3, albumin, anionGap) {\n  var deltaAnionGap = anionGap - ANION_GAP_NORMAL;\n  var expectedHCO3 = HCO3_NORMAL - deltaAnionGap;\n  if (hco3 < expectedHCO3) {\n    summary += ' and Additional Non-Gap Metabolic Acidosis.';\n  } else {\n    summary += ' and Additional Metabolic Alkalosis.';\n  }\n  calc_output.push({\n    name: '1741_ABG Analysis_result',\n    value: ' ',\n    value_text: ' ',\n    message: summary\n  });\n}\ncalc_output.push({\n  name: 'mini',\n  value: ' ',\n  value_text: ' ',\n  message: msg\n});\n",
        "inputs": [
            {
                "conditionality": null,
                "default": null,
                "fhir_rules": null,
                "inct": null,
                "label_en": "pH",
                "name": "ph",
                "optional": false,
                "tips_en": "",
                "type": "textbox",
                "unit": "ph"
            },
            {
                "conditionality": null,
                "default": null,
                "fhir_rules": null,
                "inct": null,
                "label_en": "PₐCO₂",
                "name": "paco2",
                "optional": false,
                "tips_en": "",
                "type": "textbox",
                "unit": "paco2"
            },
            {
                "conditionality": null,
                "default": null,
                "fhir_rules": null,
                "inct": null,
                "label_en": "HCO₃-",
                "name": "hco3",
                "optional": false,
                "tips_en": "",
                "type": "textbox",
                "unit": "bicarb"
            },
            {
                "conditionality": null,
                "default": null,
                "fhir_rules": null,
                "inct": null,
                "label_en": "Sodium",
                "name": "sodium",
                "optional": false,
                "tips_en": "",
                "type": "textbox",
                "unit": "na"
            },
            {
                "conditionality": null,
                "default": null,
                "fhir_rules": null,
                "inct": null,
                "label_en": "Chloride",
                "name": "chloride",
                "optional": false,
                "tips_en": "",
                "type": "textbox",
                "unit": "cl"
            },
            {
                "conditionality": null,
                "default": null,
                "fhir_rules": null,
                "inct": null,
                "label_en": "Albumin",
                "name": "albumin",
                "optional": false,
                "tips_en": "NOTE: Normal albumin levels are typically 4 g/dL in US units and 40 g/L in SI units.",
                "type": "textbox",
                "unit": "alb"
            },
            {
                "conditionality": null,
                "default": null,
                "label_en": "<p>If respiratory process present, chronicity</p>",
                "name": "chronicity",
                "option_fhir_rules": null,
                "optional": true,
                "options": [
                    {
                        "label": "Acute",
                        "value": 1
                    },
                    {
                        "label": "Chronic",
                        "value": 2
                    }
                ],
                "show_points": false,
                "tips_en": "",
                "type": "radio"
            }
        ],
        "can_search": [
            "gas",
            "vbg",
            "ph",
            "acid",
            "base"
        ],
        "specialty": [
            "Critical Care",
            "Emergency Medicine",
            "Endocrinology",
            "Gastroenterology",
            "Hospitalist Medicine",
            "Internal Medicine",
            "Nephrology",
            "Pulmonology",
            "Surgery (General)",
            "Surgery (Trauma)",
            "Toxicology"
        ]
    }
}