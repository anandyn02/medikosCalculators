{
    "id": "502",
    "title": "Gail Model for Breast Cancer Risk",
    "desc": "The Gail Model for Breast Cancer Risk estimates risk for breast cancer based on demographic and clinical data.",
    "data": {
        "orgreference": [
            {
                "href": "https://www.ncbi.nlm.nih.gov/pubmed/2593165?dopt=Abstract",
                "text": "Gail MH, Brinton LA, Byar DP, Corle DK, Green SB, Shairer C, Mulvihill JJ: Projecting individualized probabilities of developing breast cancer for white females who are being examined annually. J Natl Cancer Inst 81(24):1879-86, 1989"
            }
        ],
        "other_refer": [
            {
                "href": "https://www.ncbi.nlm.nih.gov/pubmed/10547390",
                "text": "Gail MH, Costantino JP, Bryant J, Croyle R, Freedman L, Helzlsouer K, Vogel V: Weighing the risks and benefits of tamoxifen treatment for preventing breast cancer. J Natl Cancer Inst 91(21):1829-46, 1999."
            },
            {
                "href": "https://www.ncbi.nlm.nih.gov/entrez/query.fcgi?cmd=Retrieve&db=pubmed&dopt=Abstract&list_uids=11238697&query_hl=7&itool=pubmed_docsum",
                "text": "Rockhill B, Spiegelman D, Byrne C, Hunter DJ, Colditz GA: Validation of the Gail et al. model of breast cancer risk prediction and implications for chemoprevention. J Natl Cancer Inst 93(5):358-66, 2001."
            },
            {
                "href": "https://www.ncbi.nlm.nih.gov/pubmed/18042936",
                "text": "Gail MH, Costantino JP, Pee D, Bondy M, Newman L, Selvan M, Anderson GL, Malone KE, Marchbanks PA, McCaskill-Stevens W, Norman SA, Simon MS, Spirtas R, Ursin G, and Bernstein L. Projecting Individualized Absolute Invasive Breast Cancer Risk in African American Women. J Natl Cancer Inst 99(23):1782-1792, 2007."
            },
            {
                "href": "https://www.ncbi.nlm.nih.gov/pubmed/21562243",
                "text": "Matsuno RK, Costantino JP, Ziegler RG, Anderson GL, Li H, Pee D, Gail MH. Projecting Individualized Absolute Invasive Breast Cancer Risk in Asian and Pacific Island American Women. J Natl Cancer Inst 2011."
            },
            {
                "href": "https://www.ncbi.nlm.nih.gov/pubmed/14627668 ",
                "text": "Amir E, Evans DG, Shenton A et al. Evaluation of breast cancer risk assessment packages in the family history evaluation and screening programme. J Med Genet. 2003;40:807-814"
            },
            {
                "href": "https://www.ncbi.nlm.nih.gov/pubmed/23127309",
                "text": "Quante AS, Whittemore AS, Shriver T et al. Breast cancer risk assessment across the risk continuum: genetic and nongenetic risk factors contributing to differential model performance. Breast Cancer Res. 2012 Nov 5;14(6):R144"
            },
            {
                "href": "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3827770/",
                "text": "Banegas MP, Gail MH, LaCroix A, Thompson B, Martinez ME, Wactawski-Wende J, John EM, Hubbell FA, Yasmeen S, Katki HA. Evaluating breast cancer risk projections for Hispanic women. Breast Cancer Res Treat. 2012 Feb;132(1):347-53."
            },
            {
                "href": "https://www.ncbi.nlm.nih.gov/pubmed/14983484",
                "text": "Kaur JS, Roubidoux MA, Sloan J, Novotny P. Can the Gail model be useful in American Indian and Alaska Native populations? Cancer. 2004 Mar 1;100(5):906-12"
            }
        ],
        "evidence": "",
        "facts": "<ul>\n<li>The Gail Model is one of the oldest risk models&mdash;originally published in 1989&mdash;and well validated.</li>\n<li>These parameters were used as criteria for the National Surgical Adjuvant Breast and Bowel Project (NSABP) prevention trials to identify patients with increased risk of breast cancer (5 year risk of &gt;1.7%).</li>\n<li>Lifetime risk estimates assume a life expectancy of 90 years.</li>\n</ul>",
        "estimation": [
            {
                "name": "Age",
                "unit": "gail_age",
                "error_min": "34",
                "error_max": "85",
                "warn_min": "35",
                "warn_max": "84",
                "conversion": "1",
                "normal_max_si": "0",
                "normal_max_us": "0",
                "normal_min_si": "0",
                "normal_min_us": "0",
                "units_si": "years",
                "units_us": "years"
            }
        ],
        "primary_complains": [
            "Weight Loss/Gain"
        ],
        "disease_treated": [
            "Breast Cancer"
        ],
        "logic": "/* jslint white: true */\n\nfunction GailCalculator(userCurrentAge, userMenarcheAge, userFirstLiveBirthAge, userFirstDegreeRel, userHadBiopsy, userNumBiopsy, userHyperPlasia, userRace) {\n    var self = this;\n\n    this.BcptConvert = {\n        //Note in the question that if the age is unknown, user should type in 0        \n        getCurrentAge: function(userCurrentAge) {\n            switch (true) {\n                case (userCurrentAge > 0 && userCurrentAge < 35):\n                    return 34\n                case (userCurrentAge <= 0 && userCurrentAge >= 90):\n                    return 90\n                default:\n                    return userCurrentAge\n            }\n        },\n        getMenarcheAge: function(userMenarcheAge) {\n            switch (userMenarcheAge) {\n                case 0:\n                    return 99\n                case 1:\n                    return 10\n                case 2:\n                    return 13\n                case 3:\n                    return 14\n            }\n        },\n        getFirstLiveBirthAge: function(userFirstLiveBirthAge) {\n            switch (userFirstLiveBirthAge) {\n                case 0:\n                    return 0\n                case 1:\n                    return 15\n                case 2:\n                    return 22\n                case 3:\n                    return 27\n                case 4:\n                    return 31\n                case 5:\n                    return 99\n            }\n        },\n        getFirstDegRelatives: function(userFirstDegreeRel) {\n            switch (userFirstDegreeRel) {\n                case 0:\n                    return 99\n                case 1:\n                    return 0\n                case 2:\n                    return 1\n                case 3:\n                    return 2\n            }\n        },\n        getEverHadBiopsy: function(userHadBiopsy) {\n            switch (userHadBiopsy) {\n                case 0:\n                    return 99\n                case 1:\n                    return 0\n                case 2:\n                    return 1\n            }\n        },\n        getNumberOfBiopsy: function(userNumBiopsy) {\n            switch (userNumBiopsy) {\n                case 1:\n                    return 1\n                case 2:\n                    return 2\n            }\n        },\n        getHyperPlasia: function(userHyperPlasia) {\n            switch (userHyperPlasia) {\n                case 0:\n                    return 99\n                case 1:\n                    return 0\n                case 2:\n                    return 1\n            }\n        },\n        getRace: function(userRace) {\n            switch (userRace) {\n                case 0:\n                    return 1\n                case 1:\n                    return 2\n                case 2:\n                    return 3\n                case 3:\n                    return 7\n                case 4:\n                    return 8\n                case 5:\n                    return 9\n                case 6:\n                    return 10\n                case 7:\n                    return 11\n                case 8:\n                    return 12\n                case 9:\n                    return 1    \n                default:\n                    return 1\n            }\n        },\n        menarcheAge: function(menarcheAge) {\n            switch (true) {\n                case (menarcheAge >= 7 && menarcheAge < 12):\n                    return 2\n                case (menarcheAge >= 12 && menarcheAge < 14):\n                    return 1\n                case (menarcheAge >= 14 && menarcheAge <= 39 || menarcheAge == 99):\n                    return 0\n                default:\n                    return 0\n            }\n        },\n        firstLiveBirthAge: function(firstLiveBirthAge) {\n            switch (true) {\n                case (firstLiveBirthAge == 0):\n                    return 2\n                case (firstLiveBirthAge < 20 || firstLiveBirthAge == 99):\n                    return 0\n                case (firstLiveBirthAge >= 20 && firstLiveBirthAge < 25):\n                    return 1\n                case (firstLiveBirthAge >= 25 && firstLiveBirthAge < 30):\n                    return 2\n                case (firstLiveBirthAge >= 30 && firstLiveBirthAge <= 55):\n                    return 3\n                default:\n                    return 0\n            }\n        },\n        everHadBiopsy: function(everHadBiopsy) {\n            switch (everHadBiopsy) {\n                case (99):\n                    return 0\n                default:\n                    return everHadBiopsy\n            }\n        },\n        numberOfBiopsy: function(numberOfPreviousBiopsy, everHadBiopsy) {\n            switch (true) {\n                case (everHadBiopsy == 99):\n                    return 99\n                case (numberOfPreviousBiopsy == 0 || (numberOfPreviousBiopsy == 99 && everHadBiopsy == 99)):\n                    return 0\n                case (numberOfPreviousBiopsy == 1 || (numberOfPreviousBiopsy == 99 && everHadBiopsy == 1)):\n                    return 1\n                case (numberOfPreviousBiopsy > 1 && numberOfPreviousBiopsy <= 30):\n                    return 2\n                default:\n                    return 0\n            }\n        },\n        hyperplasia: function(hyperPlasia, everHadBiopsy) {\n            switch (true) {\n                case (everHadBiopsy == 0):\n                    return 99\n                default:\n                    return hyperPlasia\n            }\n        },\n        firstDegRelatives: function(firstDegRelatives, race) {\n            if (race == undefined) {\n                switch (true) {\n                    case (firstDegRelatives == 0 || firstDegRelatives == 99):\n                        return 0\n                    case (firstDegRelatives == 1):\n                        return 1\n                    case (firstDegRelatives >= 2 && firstDegRelatives <= 31):\n                        return 2\n                    default:\n                        return 0\n                }\n            } else {\n                switch (true) {\n                    case (firstDegRelatives == 0 || firstDegRelatives == 99):\n                        return 0\n                    case (firstDegRelatives == 1):\n                        return 1\n                    case (firstDegRelatives >= 2 && firstDegRelatives <= 31 && race < 7):\n                        return 2\n                    case (firstDegRelatives >= 2 && race >= 7):\n                        return 1\n                    default:\n                        return 0\n                }\n            }\n\n        },\n        currentAgeIndicator: function(currentAge) {\n            switch (true) {\n                case (currentAge < 50):\n                    return 0\n                case (currentAge >= 50):\n                    return 1\n                default:\n                    return 0\n            }\n        },\n        rHyperplasia: function(hyperplasia, everHadBiopsy) {\n            switch (hyperplasia) {\n                case 1:\n                    return 1.82;\n                case 0:\n                    return 0.93;\n                default:\n                    return 1.0;\n            }\n        }\n    };\n\n    this.RiskCalculator = {\n        calculateRisk: function(riskindex, currentAge, projectionAge, ageIndicator, numberOfBiopsy, menarcheAge, firstLiveBirthAge, firstDegRelatives, everHadBiopsy, ihyp, rhyp, irace) {\n\n            var numCovPattInGailModel = 216\n            var bet2 = self.InitiateRickCalculatorVars.bet2(8, 12)\n            var t = self.InitiateRickCalculatorVars.t(15)\n            var rmu2 = self.InitiateRickCalculatorVars.rmu2(14, 12)\n            var rlan2 = self.InitiateRickCalculatorVars.rlan2(14, 12)\n            var rf2 = self.InitiateRickCalculatorVars.rf2(2, 13)\n\n            var bet = []\n            var rf = []\n            var abs = []\n            var rlan = []\n            var rmu = []\n            var sumb = []\n            var sumbb = []\n\n            var retval = 0.0;\n            var i\n            var j\n            var k\n            var n = 216\n            var r = 0.0\n            var ni = 0\n            var ti = currentAge\n            var ns = 0\n            var ts = projectionAge\n            var abss = 0.0\n            var incr\n            var ilev\n            var r8iTox2 = self.Conveniences.createTwoDimensionArray(216, 9)\n\n            for (i = 0; i < 8; i++) {\n                bet[i] = bet2[i][irace - 1];\n            }\n\n\n            if (irace == 2) {\n                if (menarcheAge == 2) {\n                    menarcheAge = 1;\n                    firstLiveBirthAge = 0;\n                }\n            }\n\n            for (i = 1; i <= 15; ++i) {\n                if (ti < t[i - 1]) {\n                    ni = i - 1;\n                    break;\n                }\n            }\n\n            for (i = 1; i <= 15; ++i) {\n                if (ts <= t[i - 1]) {\n                    ns = i - 1\n                    break;\n                }\n            }\n\n            incr = 0;\n\n            if (riskindex == 2 && irace < 7) {\n                incr = 3;\n            }\n\n            cindx = 0;\n            cindx = incr + irace - 1;\n\n            for (i = 0; i < 14; ++i) {\n                rmu[i] = rmu2[i][cindx];\n                rlan[i] = rlan2[i][cindx];\n            }\n\n            rf[0] = rf2[0][incr + irace - 1];\n            rf[1] = rf2[1][incr + irace - 1];\n\n            if (riskindex == 2 && irace >= 7) {\n                rf[0] = rf2[0][12];\n                rf[1] = rf2[1][12];\n            }\n\n            if (riskindex >= 2) {\n                menarcheAge = 0;\n                numberOfBiopsy = 0;\n                firstLiveBirthAge = 0;\n                firstDegRelatives = 0;\n                rhyp = 1.0;\n            }\n\n            ilev = ageIndicator * 108 + menarcheAge * 36 + numberOfBiopsy * 12 + firstLiveBirthAge * 3 + firstDegRelatives + 1;\n\n            for (k = 0; k < 216; ++k) {\n                r8iTox2[k][0] = 1.0;\n            }\n\n            for (k = 0; k < 108; ++k) {\n                r8iTox2[k][1] = 0.0;\n                r8iTox2[108 + k][1] = 1.0;\n            }\n\n            for (j = 1; j <= 2; ++j) {\n                for (k = 1; k <= 36; ++k) {\n                    r8iTox2[(j - 1) * 108 + k - 1][2] = 0.0;\n                    r8iTox2[(j - 1) * 108 + 36 + k - 1][2] = 1.0;\n                    r8iTox2[(j - 1) * 108 + 72 + k - 1][2] = 2.0;\n                }\n            }\n\n            for (j = 1; j <= 6; ++j) {\n                for (k = 1; k <= 12; ++k) {\n                    r8iTox2[(j - 1) * 36 + k - 1][3] = 0.0;\n                    r8iTox2[(j - 1) * 36 + 12 + k - 1][3] = 1.0;\n                    r8iTox2[(j - 1) * 36 + 24 + k - 1][3] = 2.0;\n                }\n            }\n\n            for (j = 1; j <= 18; ++j) {\n                for (k = 1; k <= 3; ++k) {\n                    r8iTox2[(j - 1) * 12 + k - 1][4] = 0.0;\n                    r8iTox2[(j - 1) * 12 + 3 + k - 1][4] = 1.0;\n                    r8iTox2[(j - 1) * 12 + 6 + k - 1][4] = 2.0;\n                    r8iTox2[(j - 1) * 12 + 9 + k - 1][4] = 3.0;\n                }\n            }\n\n            for (j = 1; j <= 72; ++j) {\n                r8iTox2[(j - 1) * 3 + 1 - 1][5] = 0.0;\n                r8iTox2[(j - 1) * 3 + 2 - 1][5] = 1.0;\n                r8iTox2[(j - 1) * 3 + 3 - 1][5] = 2.0;\n            }\n\n            for (i = 0; i < 216; ++i) {\n                r8iTox2[i][6] = r8iTox2[i][1] * r8iTox2[i][3];\n                r8iTox2[i][7] = r8iTox2[i][4] * r8iTox2[i][5];\n            }\n\n            for (i = 0; i < 216; ++i) {\n                r8iTox2[i][8] = 1.0;\n            }\n\n            for (i = 0; i < 216; ++i) {\n                sumb[i] = 0.0;\n                for (j = 0; j < 8; ++j) {\n                    sumb[i] += bet[j] * r8iTox2[i][j];\n                }\n            }\n\n            for (i = 1; i <= 108; ++i) {\n                sumbb[i - 1] = sumb[i - 1] - bet[0];\n            }\n\n            for (i = 109; i <= 216; ++i) {\n                sumbb[i - 1] = sumb[i - 1] - bet[0] - bet[1];\n            }\n\n            for (j = 1; j <= 6; ++j) {\n                rlan[j - 1] = rlan[j - 1] * rf[0];\n            }\n\n            for (j = 7; j <= 14; ++j) {\n                rlan[j - 1] = rlan[j - 1] * rf[1];\n            }\n\n            i = ilev\n\n            sumbb[i - 1] += Math.log(rhyp);\n\n            if (i <= 108) {\n                sumbb[i + 107] += Math.log(rhyp);\n            }\n\n\n            if (ts <= t[ni]) {\n                abs[i - 1] = 1.0 - Math.exp(-(rlan[ni - 1] * Math.exp(sumbb[\n                    i - 1]) + rmu[ni - 1]) * (ts - ti));\n                abs[i - 1] = abs[i - 1] * rlan[ni - 1] * Math.exp(\n                    sumbb[i - 1]) / (rlan[ni - 1] * Math.exp(sumbb[\n                    i - 1]) + rmu[ni - 1]);\n            } else {\n                abs[i - 1] = 1.0 - Math.exp(-(rlan[ni - 1] * Math.exp(sumbb[\n                    i - 1]) + rmu[ni - 1]) * (t[ni] - ti));\n                abs[i - 1] = abs[i - 1] * rlan[ni - 1] * Math.exp(\n                    sumbb[i - 1]) / (rlan[ni - 1] * Math.exp(sumbb[\n                    i - 1]) + rmu[ni - 1]);\n                if (ns - ni > 0) {\n                    if (projectionAge > 50.0 && currentAge < 50.0) {\n                        r = 1.0 - Math.exp(-(rlan[ns - 1] * Math.exp(sumbb[i + 107]) + rmu[ns - 1]) * (ts - t[ns - 1]));\n                        r = r * rlan[ns - 1] * Math.exp(sumbb[i + 107]) / (rlan[ns - 1] * Math.exp(sumbb[i + 107]) + rmu[ns - 1]);\n                        r = r * (Math.exp(-(rlan[ni - 1] * Math.exp(sumbb[i - 1]) + rmu[ni - 1]) * (t[ni] - ti)));\n                        if (ns - ni > 1) {\n                            menarcheAge = ns - 1;\n                            for (j = ni + 1; j <= menarcheAge; ++j) {\n                                if (t[j - 1] >= 50.0) {\n                                    r = r * (Math.exp(-(rlan[j - 1] * Math.exp(sumbb[\n                                        i + 107]) + rmu[j - 1]) * (t[\n                                        j] - t[j - 1])));\n                                } else {\n                                    r = r * (Math.exp(-(rlan[j - 1] * Math.exp(sumbb[\n                                        i - 1]) + rmu[j - 1]) * (t[j] - t[j - 1])));\n                                }\n                            }\n                        }\n                        abs[i - 1] += r;\n                    } else {\n                        r = 1.0 - Math.exp(-(rlan[ns - 1] * Math.exp(sumbb[i - 1]) + rmu[ns - 1]) * (ts - t[ns - 1]));\n                        r = r * rlan[ns - 1] * Math.exp(sumbb[i - 1]) / (\n                            rlan[ns - 1] * Math.exp(sumbb[i - 1]) +\n                            rmu[ns - 1]);\n                        r = r * (Math.exp(-(rlan[ni - 1] * Math.exp(sumbb[i - 1]) +\n                            rmu[ni - 1]) * (t[ni] - ti)));\n                        if (ns - ni > 1) {\n                            menarcheAge = ns - 1;\n                            for (j = ni + 1; j <= menarcheAge; ++j) {\n                                r = r * (Math.exp(-(rlan[j - 1] * Math.exp(sumbb[i -\n                                    1]) + rmu[j - 1]) * (t[j] - t[\n                                    j - 1])));\n                            }\n                        }\n                        abs[i - 1] += r;\n                    }\n                }\n\n                if (ns - ni > 1) {\n                    if (projectionAge > 50.0 && currentAge < 50.0) {\n                        menarcheAge = ns - 1\n                        for (k = ni + 1; k <= menarcheAge; ++k) {\n                            if (t[k - 1] >= 50.0) {\n                                r = 1.0 - Math.exp(-(rlan[k - 1] * Math.exp(sumbb[\n                                    i + 107]) + rmu[k - 1]) * (t[k] -\n                                    t[k - 1]));\n                                r = r * rlan[k - 1] * Math.exp(sumbb[i +\n                                    107]) / (rlan[k - 1] * Math.exp(sumbb[\n                                    i + 107]) + rmu[k - 1]);\n                            } else {\n                                r = 1.0 - Math.exp(-(rlan[k - 1] * Math.exp(sumbb[\n                                    i - 1]) + rmu[k - 1]) * (t[k] -\n                                    t[k - 1]));\n                                r = r * rlan[k - 1] * Math.exp(sumbb[i - 1]) / (rlan[k - 1] * Math.exp(sumbb[i -\n                                    1]) + rmu[k - 1]);\n                            }\n                            r = r * (Math.exp(-(rlan[ni - 1] * Math.exp(sumbb[i - 1]) + rmu[ni - 1]) * (t[ni] - ti)));\n                            numberOfBiopsy = k - 1;\n                            for (j = ni + 1; j <= numberOfBiopsy; ++j) {\n                                if (t[j - 1] >= 50.0) {\n                                    r = r * (Math.exp(-(rlan[j - 1] * Math.exp(sumbb[\n                                        i + 107]) + rmu[j - 1]) * (t[\n                                        j] - t[j - 1])));\n                                } else {\n                                    r = r * (Math.exp(-(rlan[j - 1] * Math.exp(sumbb[\n                                        i - 1]) + rmu[j - 1]) * (t[j] - t[j - 1])));\n                                }\n                            }\n                            abs[i - 1] += r\n                        }\n                    } else {\n                        menarcheAge = ns - 1;\n                        for (k = ni + 1; k <= menarcheAge; ++k) {\n                            r = 1.0 - Math.exp(-(rlan[k - 1] * Math.exp(sumbb[i -\n                                1]) + rmu[k - 1]) * (t[k] - t[k -\n                                1]));\n                            r = r * rlan[k - 1] * Math.exp(sumbb[i - 1]) /\n                                (rlan[k - 1] * Math.exp(sumbb[i - 1]) +\n                                    rmu[k - 1]);\n                            r = r * (Math.exp(-(rlan[ni - 1] * Math.exp(sumbb[i - 1]) + rmu[ni - 1]) * (t[ni] - ti)));\n                            numberOfBiopsy = k - 1;\n                            for (j = ni + 1; j <= numberOfBiopsy; ++j) {\n                                r = r * (Math.exp(-(rlan[j - 1] * Math.exp(sumbb[i -\n                                    1]) + rmu[j - 1]) * (t[j] - t[\n                                    j - 1])));\n                            }\n                            abs[i - 1] += r;\n                        }\n                    }\n                }\n            }\n\n            abss = abs[i - 1] * 1000.0;\n            abss = abss.toFixed(0)\n            abss = abss / 10.0\n\n            retval = abs[i - 1];\n\n            return retval;\n        }\n    };\n\n    this.Helper = {\n        riskcalc: function(riskIndex, currentAge, projectionAge, menarcheAge, firstLiveBirthAge, everHadBiopsy, numberOfBiopsy, hyperPlasia, firstDegRelatives, race) {\n            var ageIndicator\n            var rHyperPlasia\n\n            // currentAge = self.BcptConvert.getCurrentAge(currentAge);\n            menarcheAge = self.BcptConvert.menarcheAge(menarcheAge);\n            firstLiveBirthAge = self.BcptConvert.firstLiveBirthAge(firstLiveBirthAge);\n            everHadBiopsy = self.BcptConvert.everHadBiopsy(everHadBiopsy);\n            numberOfBiopsy = self.BcptConvert.numberOfBiopsy(numberOfBiopsy, everHadBiopsy);\n            hyperPlasia = self.BcptConvert.hyperplasia(hyperPlasia, everHadBiopsy);\n            // race = self.BcptConvert.getRace(race);\n\n            if (race < 7) {\n                firstDegRelatives = self.BcptConvert.firstDegRelatives(firstDegRelatives);\n            } else {\n                firstDegRelatives = self.BcptConvert.firstDegRelatives(firstDegRelatives, race);\n            };\n\n            ageIndicator = self.BcptConvert.currentAgeIndicator(currentAge);\n            rHyperPlasia = self.BcptConvert.rHyperplasia(hyperPlasia, everHadBiopsy);\n\n            return self.RiskCalculator.calculateRisk(riskIndex, currentAge, projectionAge, ageIndicator, numberOfBiopsy, menarcheAge, firstLiveBirthAge, firstDegRelatives, everHadBiopsy, hyperPlasia, rHyperPlasia, race)\n        }\n    };\n\n    this.Conveniences = {\n        createTwoDimensionArray: function(row, column) {\n            var twoDimensionArray = new Array()\n            for (i = 0; i < row; i++) {\n                twoDimensionArray[i] = new Array(column)\n            }\n            return twoDimensionArray\n        }\n    };\n\n    this.InitiateRickCalculatorVars = {\n        t: function(elementCount) {\n            var t = new Array(elementCount)\n\n            t[0] = 20.0;\n            t[1] = 25.0;\n            t[2] = 30.0;\n            t[3] = 35.0;\n            t[4] = 40.0;\n            t[5] = 45.0;\n            t[6] = 50.0;\n            t[7] = 55.0;\n            t[8] = 60.0;\n            t[9] = 65.0;\n            t[10] = 70.0;\n            t[11] = 75.0;\n            t[12] = 80.0;\n            t[13] = 85.0;\n            t[14] = 90.0;\n\n            return t\n        },\n        rmu2: function(row, column) {\n            var rmu2 = self.Conveniences.createTwoDimensionArray(row, column);\n\n            rmu2[0][0] = 49.3 * 0.00001;\n            rmu2[1][0] = 53.1 * 0.00001;\n            rmu2[2][0] = 62.5 * 0.00001;\n            rmu2[3][0] = 82.5 * 0.00001;\n            rmu2[4][0] = 130.7 * 0.00001;\n            rmu2[5][0] = 218.1 * 0.00001;\n            rmu2[6][0] = 365.5 * 0.00001;\n            rmu2[7][0] = 585.2 * 0.00001;\n            rmu2[8][0] = 943.9 * 0.00001;\n            rmu2[9][0] = 1502.8 * 0.00001;\n            rmu2[10][0] = 2383.9 * 0.00001;\n            rmu2[11][0] = 3883.2 * 0.00001;\n            rmu2[12][0] = 6682.8 * 0.00001;\n            rmu2[13][0] = 14490.8 * 0.00001;\n\n            rmu2[0][1] = 0.00074354;\n            rmu2[1][1] = 0.00101698;\n            rmu2[2][1] = 0.00145937;\n            rmu2[3][1] = 0.00215933;\n            rmu2[4][1] = 0.00315077;\n            rmu2[5][1] = 0.00448779;\n            rmu2[6][1] = 0.00632281;\n            rmu2[7][1] = 0.00963037;\n            rmu2[8][1] = 0.01471818;\n            rmu2[9][1] = 0.02116304;\n            rmu2[10][1] = 0.03266035;\n            rmu2[11][1] = 0.04564087;\n            rmu2[12][1] = 0.06835185;\n            rmu2[13][1] = 0.13271262;\n\n            rmu2[0][2] = 43.7 * 0.00001;\n            rmu2[1][2] = 53.3 * 0.00001;\n            rmu2[2][2] = 70.0 * 0.00001;\n            rmu2[3][2] = 89.7 * 0.00001;\n            rmu2[4][2] = 116.3 * 0.00001;\n            rmu2[5][2] = 170.2 * 0.00001;\n            rmu2[6][2] = 264.6 * 0.00001;\n            rmu2[7][2] = 421.6 * 0.00001;\n            rmu2[8][2] = 696.0 * 0.00001;\n            rmu2[9][2] = 1086.7 * 0.00001;\n            rmu2[10][2] = 1685.8 * 0.00001;\n            rmu2[11][2] = 2515.6 * 0.00001;\n            rmu2[12][2] = 4186.6 * 0.00001;\n            rmu2[13][2] = 8947.6 * 0.00001;\n\n            rmu2[0][3] = 44.12 * 0.00001;\n            rmu2[1][3] = 52.54 * 0.00001;\n            rmu2[2][3] = 67.46 * 0.00001;\n            rmu2[3][3] = 90.92 * 0.00001;\n            rmu2[4][3] = 125.34 * 0.00001;\n            rmu2[5][3] = 195.70 * 0.00001;\n            rmu2[6][3] = 329.84 * 0.00001;\n            rmu2[7][3] = 546.22 * 0.00001;\n            rmu2[8][3] = 910.35 * 0.00001;\n            rmu2[9][3] = 1418.54 * 0.00001;\n            rmu2[10][3] = 2259.35 * 0.00001;\n            rmu2[11][3] = 3611.46 * 0.00001;\n            rmu2[12][3] = 6136.26 * 0.00001;\n            rmu2[13][3] = 14206.63 * 0.00001;\n\n            rmu2[0][4] = 0.00074354;\n            rmu2[1][4] = 0.00101698;\n            rmu2[2][4] = 0.00145937;\n            rmu2[3][4] = 0.00215933;\n            rmu2[4][4] = 0.00315077;\n            rmu2[5][4] = 0.00448779;\n            rmu2[6][4] = 0.00632281;\n            rmu2[7][4] = 0.00963037;\n            rmu2[8][4] = 0.01471818;\n            rmu2[9][4] = 0.02116304;\n            rmu2[10][4] = 0.03266035;\n            rmu2[11][4] = 0.04564087;\n            rmu2[12][4] = 0.06835185;\n            rmu2[13][4] = 0.13271262;\n\n            rmu2[0][5] = 43.7 * 0.00001;\n            rmu2[1][5] = 53.3 * 0.00001;\n            rmu2[2][5] = 70.0 * 0.00001;\n            rmu2[3][5] = 89.7 * 0.00001;\n            rmu2[4][5] = 116.3 * 0.00001;\n            rmu2[5][5] = 170.2 * 0.00001;\n            rmu2[6][5] = 264.6 * 0.00001;\n            rmu2[7][5] = 421.6 * 0.00001;\n            rmu2[8][5] = 696.0 * 0.00001;\n            rmu2[9][5] = 1086.7 * 0.00001;\n            rmu2[10][5] = 1685.8 * 0.00001;\n            rmu2[11][5] = 2515.6 * 0.00001;\n            rmu2[12][5] = 4186.6 * 0.00001;\n            rmu2[13][5] = 8947.6 * 0.00001;\n\n            rmu2[0][6] = 0.000210649076;\n            rmu2[1][6] = 0.000192644865;\n            rmu2[2][6] = 0.000244435215;\n            rmu2[3][6] = 0.000317895949;\n            rmu2[4][6] = 0.000473261994;\n            rmu2[5][6] = 0.000800271380;\n            rmu2[6][6] = 0.001217480226;\n            rmu2[7][6] = 0.002099836508;\n            rmu2[8][6] = 0.003436889186;\n            rmu2[9][6] = 0.006097405623;\n            rmu2[10][6] = 0.010664526765;\n            rmu2[11][6] = 0.020148678452;\n            rmu2[12][6] = 0.037990796590;\n            rmu2[13][6] = 0.098333900733;\n\n            rmu2[0][7] = 0.000173593803;\n            rmu2[1][7] = 0.000295805882;\n            rmu2[2][7] = 0.000228322534;\n            rmu2[3][7] = 0.000363242389;\n            rmu2[4][7] = 0.000590633044;\n            rmu2[5][7] = 0.001086079485;\n            rmu2[6][7] = 0.001859999966;\n            rmu2[7][7] = 0.003216600974;\n            rmu2[8][7] = 0.004719402141;\n            rmu2[9][7] = 0.008535331402;\n            rmu2[10][7] = 0.012433511681;\n            rmu2[11][7] = 0.020230197885;\n            rmu2[12][7] = 0.037725498348;\n            rmu2[13][7] = 0.106149118663;\n\n            rmu2[0][8] = 0.000229120979;\n            rmu2[1][8] = 0.000262988494;\n            rmu2[2][8] = 0.000314844090;\n            rmu2[3][8] = 0.000394471908;\n            rmu2[4][8] = 0.000647622610;\n            rmu2[5][8] = 0.001170202327;\n            rmu2[6][8] = 0.001809380379;\n            rmu2[7][8] = 0.002614170568;\n            rmu2[8][8] = 0.004483330681;\n            rmu2[9][8] = 0.007393665092;\n            rmu2[10][8] = 0.012233059675;\n            rmu2[11][8] = 0.021127058106;\n            rmu2[12][8] = 0.037936954809;\n            rmu2[13][8] = 0.085138518334;\n\n            rmu2[0][9] = 0.000563507269;\n            rmu2[1][9] = 0.000369640217;\n            rmu2[2][9] = 0.001019912579;\n            rmu2[3][9] = 0.001234013911;\n            rmu2[4][9] = 0.002098344078;\n            rmu2[5][9] = 0.002982934175;\n            rmu2[6][9] = 0.005402445702;\n            rmu2[7][9] = 0.009591474245;\n            rmu2[8][9] = 0.016315472607;\n            rmu2[9][9] = 0.020152229069;\n            rmu2[10][9] = 0.027354838710;\n            rmu2[11][9] = 0.050446998723;\n            rmu2[12][9] = 0.072262026612;\n            rmu2[13][9] = 0.145844504021;\n\n            rmu2[0][10] = 0.000465500812;\n            rmu2[1][10] = 0.000600466920;\n            rmu2[2][10] = 0.000851057138;\n            rmu2[3][10] = 0.001478265376;\n            rmu2[4][10] = 0.001931486788;\n            rmu2[5][10] = 0.003866623959;\n            rmu2[6][10] = 0.004924932309;\n            rmu2[7][10] = 0.008177071806;\n            rmu2[8][10] = 0.008638202890;\n            rmu2[9][10] = 0.018974658371;\n            rmu2[10][10] = 0.029257567105;\n            rmu2[11][10] = 0.038408980974;\n            rmu2[12][10] = 0.052869579345;\n            rmu2[13][10] = 0.074745721133;\n\n            rmu2[0][11] = 0.000212632332;\n            rmu2[1][11] = 0.000242170741;\n            rmu2[2][11] = 0.000301552711;\n            rmu2[3][11] = 0.000369053354;\n            rmu2[4][11] = 0.000543002943;\n            rmu2[5][11] = 0.000893862331;\n            rmu2[6][11] = 0.001515172239;\n            rmu2[7][11] = 0.002574669551;\n            rmu2[8][11] = 0.004324370426;\n            rmu2[9][11] = 0.007419621918;\n            rmu2[10][11] = 0.013251765130;\n            rmu2[11][11] = 0.022291427490;\n            rmu2[12][11] = 0.041746550635;\n            rmu2[13][11] = 0.087485802065;\n\n            return rmu2\n        },\n        rlan2: function(row, column) {\n            var rlan2 = self.Conveniences.createTwoDimensionArray(row, column)\n\n            rlan2[0][0] = 1.0 * 0.00001;\n            rlan2[1][0] = 7.6 * 0.00001;\n            rlan2[2][0] = 26.6 * 0.00001;\n            rlan2[3][0] = 66.1 * 0.00001;\n            rlan2[4][0] = 126.5 * 0.00001;\n            rlan2[5][0] = 186.6 * 0.00001;\n            rlan2[6][0] = 221.1 * 0.00001;\n            rlan2[7][0] = 272.1 * 0.00001;\n            rlan2[8][0] = 334.8 * 0.00001;\n            rlan2[9][0] = 392.3 * 0.00001;\n            rlan2[10][0] = 417.8 * 0.00001;\n            rlan2[11][0] = 443.9 * 0.00001;\n            rlan2[12][0] = 442.1 * 0.00001;\n            rlan2[13][0] = 410.9 * 0.00001;\n\n            rlan2[0][1] = 0.00002696;\n            rlan2[1][1] = 0.00011295;\n            rlan2[2][1] = 0.00031094;\n            rlan2[3][1] = 0.00067639;\n            rlan2[4][1] = 0.00119444;\n            rlan2[5][1] = 0.00187394;\n            rlan2[6][1] = 0.00241504;\n            rlan2[7][1] = 0.00291112;\n            rlan2[8][1] = 0.00310127;\n            rlan2[9][1] = 0.00366560;\n            rlan2[10][1] = 0.00393132;\n            rlan2[11][1] = 0.00408951;\n            rlan2[12][1] = 0.00396793;\n            rlan2[13][1] = 0.00363712;\n\n            rlan2[0][2] = 2.00 * 0.00001;\n            rlan2[1][2] = 7.10 * 0.00001;\n            rlan2[2][2] = 19.70 * 0.00001;\n            rlan2[3][2] = 43.80 * 0.00001;\n            rlan2[4][2] = 81.10 * 0.00001;\n            rlan2[5][2] = 130.70 * 0.00001;\n            rlan2[6][2] = 157.40 * 0.00001;\n            rlan2[7][2] = 185.70 * 0.00001;\n            rlan2[8][2] = 215.10 * 0.00001;\n            rlan2[9][2] = 251.20 * 0.00001;\n            rlan2[10][2] = 284.60 * 0.00001;\n            rlan2[11][2] = 275.70 * 0.00001;\n            rlan2[12][2] = 252.30 * 0.00001;\n            rlan2[13][2] = 203.90 * 0.00001;\n\n            rlan2[0][3] = 1.22 * 0.00001;\n            rlan2[1][3] = 7.41 * 0.00001;\n            rlan2[2][3] = 22.97 * 0.00001;\n            rlan2[3][3] = 56.49 * 0.00001;\n            rlan2[4][3] = 116.45 * 0.00001;\n            rlan2[5][3] = 195.25 * 0.00001;\n            rlan2[6][3] = 261.54 * 0.00001;\n            rlan2[7][3] = 302.79 * 0.00001;\n            rlan2[8][3] = 367.57 * 0.00001;\n            rlan2[9][3] = 420.29 * 0.00001;\n            rlan2[10][3] = 473.08 * 0.00001;\n            rlan2[11][3] = 494.25 * 0.00001;\n            rlan2[12][3] = 479.76 * 0.00001;\n            rlan2[13][3] = 401.06 * 0.00001;\n\n            rlan2[0][4] = 0.00002696;\n            rlan2[1][4] = 0.00011295;\n            rlan2[2][4] = 0.00031094;\n            rlan2[3][4] = 0.00067639;\n            rlan2[4][4] = 0.00119444;\n            rlan2[5][4] = 0.00187394;\n            rlan2[6][4] = 0.00241504;\n            rlan2[7][4] = 0.00291112;\n            rlan2[8][4] = 0.00310127;\n            rlan2[9][4] = 0.00366560;\n            rlan2[10][4] = 0.00393132;\n            rlan2[11][4] = 0.00408951;\n            rlan2[12][4] = 0.00396793;\n            rlan2[13][4] = 0.00363712;\n\n            rlan2[0][5] = 2.00 * 0.00001;\n            rlan2[1][5] = 7.10 * 0.00001;\n            rlan2[2][5] = 19.70 * 0.00001;\n            rlan2[3][5] = 43.80 * 0.00001;\n            rlan2[4][5] = 81.10 * 0.00001;\n            rlan2[5][5] = 130.70 * 0.00001;\n            rlan2[6][5] = 157.40 * 0.00001;\n            rlan2[7][5] = 185.70 * 0.00001;\n            rlan2[8][5] = 215.10 * 0.00001;\n            rlan2[9][5] = 251.20 * 0.00001;\n            rlan2[10][5] = 284.60 * 0.00001;\n            rlan2[11][5] = 275.70 * 0.00001;\n            rlan2[12][5] = 252.30 * 0.00001;\n            rlan2[13][5] = 203.90 * 0.00001;\n\n            rlan2[0][6] = 0.000004059636;\n            rlan2[1][6] = 0.000045944465;\n            rlan2[2][6] = 0.000188279352;\n            rlan2[3][6] = 0.000492930493;\n            rlan2[4][6] = 0.000913603501;\n            rlan2[5][6] = 0.001471537353;\n            rlan2[6][6] = 0.001421275482;\n            rlan2[7][6] = 0.001970946494;\n            rlan2[8][6] = 0.001674745804;\n            rlan2[9][6] = 0.001821581075;\n            rlan2[10][6] = 0.001834477198;\n            rlan2[11][6] = 0.001919911972;\n            rlan2[12][6] = 0.002233371071;\n            rlan2[13][6] = 0.002247315779;\n\n            rlan2[0][7] = 0.000000000001;\n            rlan2[1][7] = 0.000099483924;\n            rlan2[2][7] = 0.000287041681;\n            rlan2[3][7] = 0.000545285759;\n            rlan2[4][7] = 0.001152211095;\n            rlan2[5][7] = 0.001859245108;\n            rlan2[6][7] = 0.002606291272;\n            rlan2[7][7] = 0.003221751682;\n            rlan2[8][7] = 0.004006961859;\n            rlan2[9][7] = 0.003521715275;\n            rlan2[10][7] = 0.003593038294;\n            rlan2[11][7] = 0.003589303081;\n            rlan2[12][7] = 0.003538507159;\n            rlan2[13][7] = 0.002051572909;\n\n            rlan2[0][8] = 0.000007500161;\n            rlan2[1][8] = 0.000081073945;\n            rlan2[2][8] = 0.000227492565;\n            rlan2[3][8] = 0.000549786433;\n            rlan2[4][8] = 0.001129400541;\n            rlan2[5][8] = 0.001813873795;\n            rlan2[6][8] = 0.002223665639;\n            rlan2[7][8] = 0.002680309266;\n            rlan2[8][8] = 0.002891219230;\n            rlan2[9][8] = 0.002534421279;\n            rlan2[10][8] = 0.002457159409;\n            rlan2[11][8] = 0.002286616920;\n            rlan2[12][8] = 0.001814802825;\n            rlan2[13][8] = 0.001750879130;\n\n            rlan2[0][9] = 0.000045080582;\n            rlan2[1][9] = 0.000098570724;\n            rlan2[2][9] = 0.000339970860;\n            rlan2[3][9] = 0.000852591429;\n            rlan2[4][9] = 0.001668562761;\n            rlan2[5][9] = 0.002552703284;\n            rlan2[6][9] = 0.003321774046;\n            rlan2[7][9] = 0.005373001776;\n            rlan2[8][9] = 0.005237808549;\n            rlan2[9][9] = 0.005581732512;\n            rlan2[10][9] = 0.005677419355;\n            rlan2[11][9] = 0.006513409962;\n            rlan2[12][9] = 0.003889457523;\n            rlan2[13][9] = 0.002949061662;\n\n            rlan2[0][10] = 0.000000000001;\n            rlan2[1][10] = 0.000071525212;\n            rlan2[2][10] = 0.000288799028;\n            rlan2[3][10] = 0.000602250698;\n            rlan2[4][10] = 0.000755579402;\n            rlan2[5][10] = 0.000766406354;\n            rlan2[6][10] = 0.001893124938;\n            rlan2[7][10] = 0.002365580107;\n            rlan2[8][10] = 0.002843933070;\n            rlan2[9][10] = 0.002920921732;\n            rlan2[10][10] = 0.002330395655;\n            rlan2[11][10] = 0.002036291235;\n            rlan2[12][10] = 0.001482683983;\n            rlan2[13][10] = 0.001012248203;\n\n            rlan2[0][11] = 0.000012355409;\n            rlan2[1][11] = 0.000059526456;\n            rlan2[2][11] = 0.000184320831;\n            rlan2[3][11] = 0.000454677273;\n            rlan2[4][11] = 0.000791265338;\n            rlan2[5][11] = 0.001048462801;\n            rlan2[6][11] = 0.001372467817;\n            rlan2[7][11] = 0.001495473711;\n            rlan2[8][11] = 0.001646746198;\n            rlan2[9][11] = 0.001478363563;\n            rlan2[10][11] = 0.001216010125;\n            rlan2[11][11] = 0.001067663700;\n            rlan2[12][11] = 0.001376104012;\n            rlan2[13][11] = 0.000661576644;\n\n            return rlan2\n        },\n        bet2: function(row, column) {\n            var bet2 = self.Conveniences.createTwoDimensionArray(row, column)\n\n            bet2[0][0] = -0.7494824600;\n            bet2[1][0] = 0.0108080720;\n            bet2[2][0] = 0.0940103059;\n            bet2[3][0] = 0.5292641686;\n            bet2[4][0] = 0.2186262218;\n            bet2[5][0] = 0.9583027845;\n            bet2[6][0] = -0.2880424830;\n            bet2[7][0] = -0.1908113865;\n\n            bet2[0][1] = -0.3457169653;\n            bet2[1][1] = 0.0334703319;\n            bet2[2][1] = 0.2672530336;\n            bet2[3][1] = 0.1822121131;\n            bet2[4][1] = 0.0000000000;\n            bet2[5][1] = 0.4757242578;\n            bet2[6][1] = -0.1119411682;\n            bet2[7][1] = 0.0000000000;\n\n            bet2[0][2] = -0.7494824600;\n            bet2[1][2] = 0.0108080720;\n            bet2[2][2] = 0.0940103059;\n            bet2[3][2] = 0.5292641686;\n            bet2[4][2] = 0.2186262218;\n            bet2[5][2] = 0.9583027845;\n            bet2[6][2] = -0.2880424830;\n            bet2[7][2] = -0.1908113865;\n\n            for (i = 6; i <= 11; i++) {\n                bet2[0][i] = 0.00000000000000;\n                bet2[1][i] = 0.00000000000000;\n                bet2[2][i] = 0.07499257592975;\n                bet2[3][i] = 0.55263612260619;\n                bet2[4][i] = 0.27638268294593;\n                bet2[5][i] = 0.79185633720481;\n                bet2[6][i] = 0.00000000000000;\n                bet2[7][i] = 0.00000000000000;\n            }\n\n            return bet2\n        },\n        rf2: function(row, column) {\n            var rf2 = self.Conveniences.createTwoDimensionArray(row, column)\n\n            rf2[0][0] = 0.5788413;\n            rf2[1][0] = 0.5788413;\n\n            rf2[0][1] = 0.72949880;\n            rf2[1][1] = 0.74397137;\n\n            rf2[0][2] = 0.5788413;\n            rf2[1][2] = 0.5788413;\n\n            rf2[0][3] = 1.0;\n            rf2[1][3] = 1.0;\n\n            rf2[0][4] = 1.0;\n            rf2[1][4] = 1.0;\n\n            rf2[0][5] = 1.0;\n            rf2[1][5] = 1.0;\n\n            for (i = 6; i <= 11; i++) {\n                rf2[0][i] = 0.47519806426735;\n                rf2[1][i] = 0.50316401683903;\n            }\n\n            rf2[0][12] = 1.0;\n            rf2[1][12] = 1.0;\n\n            return rf2\n        }\n    };\n\n    this.calculate = function() {\n        var currentAge = self.BcptConvert.getCurrentAge(userCurrentAge)\n        var menarcheAge = self.BcptConvert.getMenarcheAge(userMenarcheAge)\n        var firstLiveBirthAge = self.BcptConvert.getFirstLiveBirthAge(userFirstLiveBirthAge)\n        var firstDegreeRel = self.BcptConvert.getFirstDegRelatives(userFirstDegreeRel)\n        var hadBiopsy = self.BcptConvert.getEverHadBiopsy(userHadBiopsy)\n        var numBiopsy = self.BcptConvert.getNumberOfBiopsy(userNumBiopsy)\n        var hyperPlasia = self.BcptConvert.getHyperPlasia(userHyperPlasia)\n        var race = self.BcptConvert.getRace(userRace)\n\n        var msg;\n        if (userRace == 2) {\n            msg = \"<br/><br/>The Gail Model has <u>not</u> been extensively evaluated for Hispanic women, and some retrospective data suggests that the relative risks may not be accurate for this population. Use caution when interpreting these results.\";\n        } else if (userRace == 9) {\n            msg = \"<br/><br/>The Gail Model has <u>not</u> been extensively evaluated for American Indian and Alaskan Native women, while some retrospective data suggest that the relative risks are accurate for this population. Use caution when interpreting these results.\";\n        } else {\n            msg= \"\";\n        }\n\n        calc_output = []\n\n        // Calculate 5 year risk.  \n        var absRisk5yr = self.Helper.riskcalc(1, currentAge, currentAge + 5, menarcheAge, firstLiveBirthAge, hadBiopsy, numBiopsy, hyperPlasia, firstDegreeRel, race)\n        var avgRisk5yr = self.Helper.riskcalc(2, currentAge, currentAge + 5, menarcheAge, firstLiveBirthAge, hadBiopsy, numBiopsy, hyperPlasia, firstDegreeRel, race)\n        var absRiskPctg5yr = parseFloat((parseFloat(absRisk5yr.toFixed(6))*100)).toFixed(1)\n        var avgRiskPctg5yr = parseFloat((parseFloat(avgRisk5yr.toFixed(6))*100)).toFixed(1)\n\n        calc_output.push({\n            name: 'mini',\n            value: absRiskPctg5yr.toString() + '%',\n            value_text: '',\n            message:  '5-year breast cancer risk'\n        });\n\n        calc_output.push({\n            name: '3647_Gail Model for Breast CA Risk_result (5-year)',\n            value: absRiskPctg5yr.toString() + '%',\n            value_text: '',\n            message:  '5-year breast cancer risk<br/><br/>Compared with ' + avgRiskPctg5yr.toString() +'% for the average ' + currentAge + ' year old woman' + msg\n        });\n\n        // Calculate lifetime risk. \n        var absRisklife = self.Helper.riskcalc(1, currentAge, 90, menarcheAge, firstLiveBirthAge, hadBiopsy, numBiopsy, hyperPlasia, firstDegreeRel, race)\n        var avgRisklife = self.Helper.riskcalc(2, currentAge, 90, menarcheAge, firstLiveBirthAge, hadBiopsy, numBiopsy, hyperPlasia, firstDegreeRel, race)\n        var absRiskPctglife = parseFloat((parseFloat(absRisklife.toFixed(6))*100).toFixed(1))\n        var avgRiskPctglife = parseFloat((parseFloat(avgRisklife.toFixed(6))*100).toFixed(1))\n\n        calc_output.push({\n            name: '3647_Gail Model for Breast CA Risk_result (lifetime)',\n            value: absRiskPctglife.toString() + '%',\n            value_text: '',\n            message: 'Lifetime breast cancer risk<br/><br/>Compared with ' + avgRiskPctglife.toString() + '% for the average ' + currentAge+' year old woman'\n        });\n\n        return calc_output\n    };\n}\n\n// GailCalculator(userCurrentAge, userMenarcheAge, userFirstLiveBirthAge, userFirstDegreeRel, userHadBiopsy, userNumBiopsy, userHyperPlasia, userRace)\n// var calculation = new GailCalculator(75, 3, 3, 2, 2, 1, 2, 0).calculate()\n\nvar userCurrentAge = parseFloat(userCurrentAge)\nvar userMenarcheAge = parseFloat(userMenarcheAge)\nvar userFirstLiveBirthAge = parseFloat(userFirstLiveBirthAge)\nvar userFirstDegreeRel = parseFloat(userFirstDegreeRel)\n\nvar userNumBiopsy\nif (parseFloat(userHadBiopsy) == 2) {\n    userNumBiopsy = 1\n} else if (parseFloat(userHadBiopsy) == 3) {\n    userNumBiopsy = 2\n} else {\n    userNumBiopsy = 0\n}\n\nvar userHadBiopsy = (parseFloat(userHadBiopsy) == 3) ? 2 : parseFloat(userHadBiopsy)\n// var userNumBiopsy = ((typeof userNumBiopsy == 'undefined') || (userHadBiopsy !== 2 && userHadBiopsy !== 3)) ? 0 : parseFloat(userNumBiopsy)\nvar userHyperPlasia = ((typeof userNumBiopsy == 'undefined') || (userHadBiopsy !== 2)) ? 0 : parseFloat(userHyperPlasia)\n\nvar userRace = parseFloat(userRace)\n\nif (userRace == 3) {\n    userRace = parseFloat(asianSubRace)\n}\n\nvar calc_output = new GailCalculator(userCurrentAge, userMenarcheAge, userFirstLiveBirthAge, userFirstDegreeRel, userHadBiopsy, userNumBiopsy, userHyperPlasia, userRace).calculate()",
        "inputs": [
            {
                "conditionality": "",
                "default": null,
                "fhir_rules": null,
                "inct": null,
                "label_en": "Age",
                "name": "userCurrentAge",
                "optional": false,
                "tips_en": "Valid for women 35-85 years old.",
                "type": "textbox",
                "unit": "gail_age"
            },
            {
                "conditionality": "",
                "default": null,
                "label_en": "First menstrual period",
                "mdcalc_info_concept": null,
                "name": "userMenarcheAge",
                "option_fhir_rules": null,
                "optional": false,
                "options": [
                    {
                        "label": "Unknown",
                        "value": 0
                    },
                    {
                        "label": "7-11 years old",
                        "value": 1
                    },
                    {
                        "label": "12-13 years old ",
                        "value": 2
                    },
                    {
                        "label": ">13 years old",
                        "value": 3
                    }
                ],
                "show_points": false,
                "tips_en": "",
                "type": "radio"
            },
            {
                "conditionality": "",
                "default": null,
                "label_en": "First live birth",
                "mdcalc_info_concept": null,
                "name": "userFirstLiveBirthAge",
                "option_fhir_rules": null,
                "optional": false,
                "options": [
                    {
                        "label": "Unknown",
                        "value": 5
                    },
                    {
                        "label": "No births",
                        "value": 0
                    },
                    {
                        "label": "<20 years old",
                        "value": 1
                    },
                    {
                        "label": "20-24 years old",
                        "value": 2
                    },
                    {
                        "label": "25-29 years old",
                        "value": 3
                    },
                    {
                        "label": "≥30 years old",
                        "value": 4
                    }
                ],
                "show_points": false,
                "tips_en": "",
                "type": "radio"
            },
            {
                "conditionality": "",
                "default": null,
                "label_en": "First-degree relatives with breast cancer",
                "mdcalc_info_concept": null,
                "name": "userFirstDegreeRel",
                "option_fhir_rules": null,
                "optional": false,
                "options": [
                    {
                        "label": "Unknown",
                        "value": 0
                    },
                    {
                        "label": "0",
                        "value": 1
                    },
                    {
                        "label": "1",
                        "value": 2
                    },
                    {
                        "label": ">1",
                        "value": 3
                    }
                ],
                "show_points": false,
                "tips_en": "Include only mother, sisters and daughters",
                "type": "radio"
            },
            {
                "conditionality": "",
                "default": null,
                "label_en": "Previous breast biopsy",
                "mdcalc_info_concept": null,
                "name": "userHadBiopsy",
                "option_fhir_rules": null,
                "optional": false,
                "options": [
                    {
                        "label": "Unknown",
                        "value": 0
                    },
                    {
                        "label": "0",
                        "value": 1
                    },
                    {
                        "label": "1",
                        "value": 2
                    },
                    {
                        "label": ">1",
                        "value": 3
                    }
                ],
                "show_points": false,
                "tips_en": "",
                "type": "radio"
            },
            {
                "conditionality": "userHadBiopsy == 2 || userHadBiopsy == 3",
                "default": null,
                "label_en": "≥1 breast biopsy with atypical hyperplasia",
                "mdcalc_info_concept": null,
                "name": "userHyperPlasia",
                "option_fhir_rules": null,
                "optional": false,
                "options": [
                    {
                        "label": "Unknown",
                        "value": 0
                    },
                    {
                        "label": "No",
                        "value": 1
                    },
                    {
                        "label": "Yes",
                        "value": 2
                    }
                ],
                "show_points": false,
                "tips_en": "",
                "type": "radio"
            },
            {
                "conditionality": "",
                "default": null,
                "label_en": "Race/ethnicity",
                "mdcalc_info_concept": null,
                "name": "userRace",
                "option_fhir_rules": null,
                "optional": false,
                "options": [
                    {
                        "label": "White",
                        "value": 0
                    },
                    {
                        "label": "African-American",
                        "value": 1
                    },
                    {
                        "label": "Hispanic",
                        "value": 2
                    },
                    {
                        "label": "Asian-American",
                        "value": 3
                    },
                    {
                        "label": "American-Indian/Alaskan Native",
                        "value": 9
                    },
                    {
                        "label": "Unknown",
                        "value": 10
                    }
                ],
                "show_points": false,
                "tips_en": "",
                "type": "radio"
            },
            {
                "conditionality": "userRace == 3",
                "default": null,
                "label_en": "Asian-American sub race",
                "mdcalc_info_concept": null,
                "name": "asianSubRace",
                "option_fhir_rules": null,
                "optional": false,
                "options": [
                    {
                        "label": "Chinese",
                        "value": 3
                    },
                    {
                        "label": "Japanese",
                        "value": 4
                    },
                    {
                        "label": "Filipino",
                        "value": 5
                    },
                    {
                        "label": "Hawaiian",
                        "value": 6
                    },
                    {
                        "label": "Pacific Islander",
                        "value": 7
                    }
                ],
                "show_points": false,
                "tips_en": "",
                "type": "radio"
            }
        ],
        "can_search": [
            "Gail",
            "ca",
            "breast",
            "brca1"
        ],
        "specialty": [
            "Family Practice",
            "Hematology and Oncology",
            "Internal Medicine",
            "OB-Gyn",
            "Radiation Oncology",
            "Radiology",
            "Surgery (General)"
        ]
    }
}